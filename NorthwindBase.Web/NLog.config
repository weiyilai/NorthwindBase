<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Error" 
      internalLogFile="c:\temp\nlog-internal.log"
      throwConfigExceptions="true">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>
  <extensions>
    <!-- load NLog.Extended to enable ASP.NET-specific functionality -->
    <add assembly="NLog.Extended" />
    <add assembly="NLog.Web" />
    <!-- load NLog.Extensions for Azure -->
    <add assembly="NLog.Extensions.AzureBlobStorage" />
    <add assembly="NLog.Extensions.AzureCosmosTable" />
    <add assembly="NLog.Extensions.AzureQueueStorage" />
    <add assembly="NLog.Extensions.AzureEventHub" />
    <add assembly="NLog.Extensions.AzureServiceBus" />
    <add assembly="NLog.Extensions.AzureAccessToken" />
  </extensions>
  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets async="true">

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->
    <target name="ef" xsi:type="File" fileName="${basedir}/App_Data/Logs/trace.log"
        layout="${date} | ${level} | ${event-properties:item=UserName} | ${event-properties:item=Funcational} | ${message}" />
    <target name="dapper" xsi:type="File" fileName="${basedir}/App_Data/Logs/info.log"
        layout="${date} | ${level} | ${event-properties:item=UserName} | ${event-properties:item=Funcational} | ${message}" />
    
    <!-- Azure Blob -->
    <target xsi:type="AzureBlobStorage"
            name="Azure"
            layout="${longdate:universalTime=true} ${level:uppercase=true} - ${logger}: ${message} ${exception:format=tostring}"
            connectionString="DefaultEndpointsProtocol=https;AccountName=##accountName##;AccountKey=##accountKey##;EndpointSuffix=core.windows.net"
            container="${machinename}"
            blobName="${logger}/${date:universalTime=true:format=yy-MM-dd}/${date:universalTime=true:format=HH}.log">
      <metadata name="mymeta" layout="mymetavalue" />
       Multiple allowed 
      <tag name="mytag" layout="mytagvalue" />
       Multiple allowed 
    </target>

    <!-- My Azure Blob -->
    <target xsi:type="AzureBlobStorage"
            name="MyAzure"
            layout="${longdate:universalTime=true} ${level:uppercase=true} - ${logger}: ${message} ${exception:format=tostring}"
            connectionString="DefaultEndpointsProtocol=https;AccountName=##accountName##;AccountKey=##accountKey##;EndpointSuffix=core.windows.net"
            container="${machinename}"
            blobName="${logger}/${date:universalTime=true:format=yy-MM-dd}/${date:universalTime=true:format=HH}.log">
      <metadata name="mymeta" layout="mymetavalue" />
      Multiple allowed
      <tag name="mytag" layout="mytagvalue" />
      Multiple allowed
    </target>

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
  </targets>

  <rules>
    <!-- add your logging rules here -->
    <!--<logger name="*" minlevel="Info" writeTo="database">
		  <filters>
			  <when condition="contains('${message}', 'test')" action="Ignore" />
		  </filters>
	  </logger>-->
    <!--<logger name="*" levels="Trace,Debug,Info,Warn,Error" writeTo="ef" />-->
    <logger name="*" levels="Trace" writeTo="ef" />
    <logger name="*" levels="Info" writeTo="dapper,Azure" />    
    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>
